cmake_minimum_required(VERSION 3.10)

project(hbgs_mfors_tree_data C CXX)

set(Sources
    Generate_credential.cpp
)

if (HBGS_PARAMETER_SET_TEST1)
    add_executable(generate_credential_129_1 ${Sources})
    target_include_directories(generate_credential_129_1 SYSTEM PRIVATE ${include_dirs})
    target_link_libraries(generate_credential_129_1 PRIVATE project_options project_warnings stdc++ hbgs_lib_129_1 ${ossl_libs} picnic sha3)
elseif (HBGS_PARAMETER_SET_TEST2)
    add_executable(generate_credential_255_1 ${Sources})
    target_include_directories(generate_credential_255_1 SYSTEM PRIVATE ${include_dirs})
    target_link_libraries(generate_credential_255_1 PRIVATE project_options project_warnings stdc++ hbgs_lib_255_1 ${ossl_libs} picnic sha3)
elseif (HBGS_PARAMETER_SET_TEST3)
    add_executable(generate_credential_129_2 ${Sources})
    target_include_directories(generate_credential_129_2 SYSTEM PRIVATE ${include_dirs})
    target_link_libraries(generate_credential_129_2 PRIVATE project_options project_warnings stdc++ hbgs_lib_129_2 ${ossl_libs} picnic sha3)
elseif (HBGS_PARAMETER_SET_TEST4)
    add_executable(generate_credential_255_2 ${Sources})
    target_include_directories(generate_credential_255_2 SYSTEM PRIVATE ${include_dirs})
    target_link_libraries(generate_credential_255_2 PRIVATE project_options project_warnings stdc++ hbgs_lib_255_2 ${ossl_libs} picnic sha3)
elseif (HBGS_PARAMETER_SET_TEST5)
    add_executable(generate_credential_129_4 ${Sources})
    target_include_directories(generate_credential_129_4 SYSTEM PRIVATE ${include_dirs})
    target_link_libraries(generate_credential_129_4 PRIVATE project_options project_warnings stdc++ hbgs_lib_129_4 ${ossl_libs} picnic sha3)
elseif (HBGS_PARAMETER_SET_TEST6)
    add_executable(generate_credential_255_4 ${Sources})
    target_include_directories(generate_credential_255_4 SYSTEM PRIVATE ${include_dirs})
    target_link_libraries(generate_credential_255_4 PRIVATE project_options project_warnings stdc++ hbgs_lib_255_4 ${ossl_libs} picnic sha3)
elseif (HBGS_PARAMETER_SET_TEST7)
    add_executable(generate_credential_129_6 ${Sources})
    target_include_directories(generate_credential_129_6 SYSTEM PRIVATE ${include_dirs})
    target_link_libraries(generate_credential_129_6 PRIVATE project_options project_warnings stdc++ hbgs_lib_129_6 ${ossl_libs} picnic sha3)
elseif (HBGS_PARAMETER_SET_TEST8)
    add_executable(generate_credential_255_6 ${Sources})
    target_include_directories(generate_credential_255_6 SYSTEM PRIVATE ${include_dirs})
    target_link_libraries(generate_credential_255_6 PRIVATE project_options project_warnings stdc++ hbgs_lib_255_6 ${ossl_libs} picnic sha3)
else()
    message( FATAL_ERROR "No HBGS parameter set selected, CMake will exit." )
endif()
